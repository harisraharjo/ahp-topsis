// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url          = env("DATABASE_URL_PRISMA")
    relationMode = "prisma"
}

model Criteria {
    id       Int     @id @default(autoincrement()) @db.UnsignedSmallInt()
    name     String
    weight   Decimal @db.Decimal(8, 5)
    scale    Json? // example: {value: ["A", "b", "c","D"]}
    parentId Int?
}

// <-- NEXT AUTH -->
// Necessary for Next auth
model Account {
    id                       String   @id @default(cuid())
    createdAt                DateTime @default(now())
    updatedAt                DateTime @default(now())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?  @db.Text
    access_token             String?  @db.Text
    refresh_token_expires_in Int?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?  @db.Text
    session_state            String?
    oauth_token_secret       String?
    oauth_token              String?

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime

    @@index([userId])
}

enum Role {
    USER
    ADMIN
}

model User {
    id            String    @id @default(cuid())
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @default(now())
    name          String?
    email         String?   @unique
    password      String?
    emailVerified DateTime?
    image         String?
    role          Role?     @default(USER)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
